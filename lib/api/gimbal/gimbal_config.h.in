#ifndef GIMBAL_CONFIG_H
#define GIMBAL_CONFIG_H

#include <stdint.h>
#include <stddef.h>
#include <assert.h>

// ===== Automatically generated by CMake ======

#define GBL_PROJECT_NAME                    "@CMAKE_PROJECT_NAME@"
#define GBL_PROJECT_VERSION_MAJOR           @CMAKE_PROJECT_VERSION_MAJOR@u
#define GBL_PROJECT_VERSION_MINOR           @PROJECT_VERSION_MINOR@u
#define GBL_PROJECT_VERSION_PATCH           @PROJECT_VERSION_PATCH@u
#define GBL_PROJECT_VERSION                 "${PROJECT_VERSION}"
#define GBL_PROJECT_DESCRIPTION             "@PROJECT_DESCRIPTION@"
#define GBL_PROJECT_URL                     "@PROJECT_HOMEPAGE_URL@"

#define GBL_BUILD_TYPE                      "@CMAKE_BUILD_TYPE@"
#define GBL_BUILD_CONFIG                    "@GBL_CONFIGURATION_ENABLED@"

#define GBL_BUILD_C_COMPILER_ID             "@CMAKE_C_COMPILER_ID@"
#define GBL_BUILD_C_COMPILER_VERSION        "@CMAKE_C_COMPILER_VERSION@"
#define GBL_BUILD_C_COMPILER_TARGET         "@CMAKE_C_COMPILER_TARGET@"
#define GBL_BUILD_C_COMPILER_TOOLCHAIN      "@CMAKE_C_COMPILER_EXTERNAL_TOOLCHAIN@"

#define GBL_BUILD_CPP_COMPILER_ID           "@CMAKE_CXX_COMPILER_ID@"
#define GBL_BUILD_CPP_COMPILER_VERSION      "@CMAKE_CXX_COMPILER_VERSION@"
#define GBL_BUILD_CPP_COMPILER_TARGET       "@CMAKE_CXX_COMPILER_TARGET@"
#define GBL_BUILD_CPP_COMPILER_TOOLCHAIN    "@CMAKE_CXX_COMPILER_EXTERNAL_TOOLCHAIN@"

#define GBL_BUILD_HOST_OS                   "@CMAKE_HOST_SYSTEM@"
#define GBL_BUILD_HOST_ARCH                 "@CMAKE_HOST_SYSTEM_PROCESSOR@"

#define GBL_BUILD_TARGET_OS                 "@CMAKE_SYSTEM@"
#define GBL_BUILD_TARGET_ARCH               "@CMAKE_SYSTEM_PROCESSOR@"

#define GBL_PTR_SIZE                        @CMAKE_SIZEOF_VOID_P@

// ========= GENERAL CONFIGURATION ITEMS ===============

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GBL_ASSERT_1
#   define GBL_ASSERT_1(expr)                    assert((expr))
#endif

#ifndef GBL_ASSERT_2
#   define GBL_ASSERT_2(expr, cause)            GBL_ASSERT_1((expr) && (cause))
#endif

#ifndef GBL_BOOL
#   define GBL_BOOL                             uint32_t
#endif

#ifndef GBL_REAL
#   define GBL_REAL                             float
#endif

#ifndef GBL_INT
#   define GBL_INT                              int32_t
#endif

#ifndef GBL_ENUM
#   define GBL_ENUM                             uint32_t
#endif

#ifndef GBL_SIZE
#   define GBL_SIZE                             size_t
#   define GBL_SIZE_MAX                         SIZE_MAX
#   define GBL_SIZE_FMT                         "zu"
#endif

#ifndef GBL_HASH
#   define GBL_HASH                             uint32_t
#endif

#ifndef GBL_TRUE
#   define GBL_TRUE                             1
#endif

#ifndef GBL_FALSE
#   define GBL_FALSE                            0
#endif

#ifndef GBL_SOURCE_FILE
#   define GBL_SOURCE_FILE                      __FILE__
#endif
#ifndef GBL_SOURCE_FUNCTION
#   define GBL_SOURCE_FUNCTION                  __func__
#endif
#ifndef GBL_SOURCE_LINE
#   define GBL_SOURCE_LINE                      __LINE__
#endif
#ifndef GBL_SOURCE_COLUMN
#   define GBL_SOURCE_COLUMN                    0
#endif

#ifndef GBL_API_FRAME_NAME
#   define GBL_API_FRAME_NAME                   gblApiFrame_
#endif

#ifndef GBL_API_END_LABEL
#   define GBL_API_END_LABEL                    gbl_api_end_
#endif

#ifndef GBL_VA_SNPRINTF_BUFFER_SIZE
#   define GBL_VA_SNPRINTF_BUFFER_SIZE          512
#endif

#ifndef GBL_STRING_BUFFER_STACK_SIZE
#   define GBL_STRING_BUFFER_STACK_SIZE         64
#endif

#ifndef GBL_API_RESULT_MSG_BUFFER_SIZE
#   define GBL_API_RESULT_MSG_BUFFER_SIZE       128
#endif

#ifndef GBL_STRING_BUFFER_BASE_STACK_SIZE
#   define GBL_STRING_BUFFER_BASE_STACK_SIZE    128
#endif


typedef struct GblSourceLocation {
    const char* pFile;
    const char* pFunc;
    GBL_SIZE     line;
    GBL_SIZE     column;
} GblSourceLocation;

static inline GblSourceLocation GBL_SOURCE_LOCATION(const char* pFile, const char* pFunc, GBL_SIZE line, GBL_SIZE column) {
    const GblSourceLocation location = {
        pFile, pFunc, line, column
    };
    return location;
}

#ifdef __cplusplus
}
#endif


#endif // GBL_CONFIG_H

